% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exactalg.R
\name{exactalg}
\alias{exactalg}
\title{Segment data into exact changepoints}
\usage{
exactalg(data, max_segments = ncol(data),
  log_likelihood = multivariate, penalty = function(data) 0,
  allow_parallel = TRUE)
}
\arguments{
\item{data}{matrix for which we wish to estimate the independent segments of.}

\item{log_likelihood}{log likelihood estimation funciton, which will be
applied to all possible combinations of segments. Because it's executed
many times, it's likely to be the slow part of the function execution, so
it's advised that this function should have a performant, native
implementation. Defaults to a performant \code{multivariate} estimation.}

\item{penalty}{a function that determines the penalty for the segment. It's
called with the segment being analysed as it's only parameter.}

\item{allow_parallel}{allows parallel execution to take place using the
registered cluster. Defaults to TRUE.}
}
\description{
Find changespoints in data calculating the penalized likelihood for all possible
segment combinations
}
\details{
Function that implements the dynamic programming algorithm, with the intent
of finding points of independent changepoints for which the log likelihood
function is maximized. It analyzes all possible combinations, returning the
changepoints that are garanteed to segment the data matrix in the maximum
likelihood independent changepoints. Because it analyzes all possible combinations
of changepoionts, it has a quadratic algorithm complexity, meaning it works
in an acceptable computation time, whereas time increases quadratically,
being quite long for longer data sequences one wish to apply. For longer datasets,
the hierarchical algorithm might be more adequate.
}
